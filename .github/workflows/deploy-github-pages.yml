name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      project-name: ${{ steps.extract-names.outputs.project-name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Extract repo and Angular project names
        id: extract-names
        shell: bash
        run: |
          # REPO_NAME becomes only the repo part of owner/repo
          echo "REPO_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
          # PROJECT_NAME is the first project key in angular.json (matches angular.json structure)
          PROJECT_NAME=$(node -e "console.log(Object.keys(require('./angular.json').projects)[0])")
          echo "PROJECT_NAME=$PROJECT_NAME" >> $GITHUB_ENV
          echo "project-name=$PROJECT_NAME" >> $GITHUB_OUTPUT
          echo "Detected PROJECT_NAME=$PROJECT_NAME"
          echo "Detected REPO_NAME=${GITHUB_REPOSITORY#*/}"

      - name: Build (production) with correct base-href
        env:
          PROJECT_NAME: ${{ env.PROJECT_NAME }}
          REPO_NAME: ${{ env.REPO_NAME }}
        run: |
          # Build production output; base-href ensures assets are resolved for repo-hosted pages
          npm run build -- --configuration production --project "$PROJECT_NAME" --base-href "/$REPO_NAME/"

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist/${{ steps.extract-names.outputs.project-name }}/browser

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  notify:
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: always()
    steps:
      - name: Determine deployment status
        id: status
        run: |
          if [ "${{ needs.deploy.result }}" = "success" ]; then
            echo "status_emoji=✅" >> $GITHUB_OUTPUT
            echo "status_text=Successful" >> $GITHUB_OUTPUT
            echo "status_long=SUCCESS" >> $GITHUB_OUTPUT
          else
            echo "status_emoji=❌" >> $GITHUB_OUTPUT
            echo "status_text=Failed" >> $GITHUB_OUTPUT
            echo "status_long=FAILED" >> $GITHUB_OUTPUT
          fi

      - name: Send email notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "GitHub Pages Deployment ${{ steps.status.outputs.status_emoji }} ${{ steps.status.outputs.status_text }}"
          to: ${{ secrets.MAIL_TO }}
          from: github-actions@github.com
          body: |
            Deployment Status: ${{ steps.status.outputs.status_emoji }} ${{ steps.status.outputs.status_long }}
            
            Repository: ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.sha }}
            Triggered by: ${{ github.actor }}
            Workflow: ${{ github.workflow }}
            
            Build Job: ${{ needs.build.result }}
            Deploy Job: ${{ needs.deploy.result }}
            
            View deployment: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/
            View run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
